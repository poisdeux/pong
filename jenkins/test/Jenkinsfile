pipeline {
  agent { 
    docker {
        image 'poisdeux/pong:latest-test'
	args '-u root:root'
    }
  }
  stages {
    stage('build') {
        steps {
            sh '''
		make CFLAGS=--coverage
            '''
        }
    }
    stage('Test if pong starts') {
        steps {
            sh '''
                xvfb-run ./pong-1.1 &
                PID=$!
                if ps ${PID} > /dev/null 2>&1
                then
                    sleep 1
                    kill ${PID}
                else
                    exit 1
                fi
            '''
        }
    }
    stage('Run unit tests') {
        steps {
            sh '''
                echo Unit testing
            '''
        }
    }
    stage('Run integration tests') {
        steps {
            sh '''
                echo Unit testing
            '''
        }

    }
    stage('Run acceptance tests') {
        steps {
            sh '''
                echo Unit testing
            '''
        }

    }
    stage('Report coverage') {
        steps {
            sh '''
                gcovr --branches --xml-pretty -r . -o pong-coverage.xml                
            '''
            step([$class: 'CoberturaPublisher', autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: 'pong-coverage.xml', failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false])
        }
    }
    stage('Archiving artificacts') {
        steps {
            archiveArtifacts artifacts: 'pong-1.1', fingerprint: true, onlyIfSuccessful: true
        }
    }
  }
}
